# COMPOSE_PROJECT_NAME=DMS docker-compose -f database/start_db_docker-compose.yml up -d
# docker exec -it DMS-mysql /bin/bash
# COMPOSE_PROJECT_NAME=DMS docker-compose -f database/start_db_docker-compose.yml down

# COMPOSE_PROJECT_NAME=DMS docker-compose -f database/start_db_docker-compose.yml start -d
# COMPOSE_PROJECT_NAME=DMS docker-compose -f database/start_db_docker-compose.yml stop -d
# mysql -u admin --protocol=tcp -p

version: "3.9"

services:
    DMS-mysql:
        image: "mysql:8.0.26"
        container_name: DMS-mysql-container
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: DMS
            MYSQL_USER: admin
            MYSQL_PASSWORD: 123456
        volumes:
            - /home/aimenext/tanhm/DMS/data/mysql-container:/var/lib/mysql
            # - ./docker-db/db-data:/var/lib/mysql
            # - ./docker-db/mysqld.sock:/var/run/mysqld/mysqld.sock
        # entrypoint:
            # sh -c "echo 'CREATE DATABASE IF NOT EXISTS DMS;' > /docker-entrypoint-initdb.d/init.sql;
            #     /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
        ports:
            - "3010:3306"
        #         mode: hostost
    # mysql-workbench:
    #     image: lscr.io/linuxserver/mysql-workbench:8.0.26
    #     container_name: DMS-mysql-workbench-2022
    #     environment:
    #         # - PUID=1000
    #         # - PGID=1000
    #         - TZ=Asia/Ho_Chi_Minh
    #     volumes:
    #       - ./db-data/mysql-workbench:/config
    #     ports:
    #       - 3011:3000
    #     cap_add:
    #       - IPC_LOCK
        # restart: unless-stopped
    redis:
        image: redis:5.0-rc4
        container_name: DMS-redis
        # restart: on-failure
        volumes:
            - "/home/aimenext/tanhm/DMS/data/redis:/data"
        command: redis-server --appendonly yes
        ports:
            - "3012:80"
